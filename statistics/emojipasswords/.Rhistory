#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
labs(x="Emoji",y="Errors during log-in",color="Emoji")
)
df.errors <- read.csv('./emoji-errors-failed-logins.csv', sep=';', header = T)
df.errors <- renameColumn(df.errors, "X...condition","group")
df.errors$group <- as.character(df.errors$group)
df.errors$group[df.errors$group=='apple'] <- "Control Group"
df.errors$group[df.errors$group=='google'] <- "Experimental Group"
df.errors$group <- factor(df.errors$group);
errorEmojiTicks <- c(
"cherry_blossom",
"cyclone",
"bird",
"tea",
"revolving_hearts",
"diamond",
"camel",
"penguin",
"white_check_mark",
"desktop_computer",
"smile",
"sweat_smile",
"blush",
"headphones",
"poultry_leg"
)
( # by group
errorHistogram2 <- ggplot(df.errors, aes(x=emoji,y=errors)) +
geom_histogram(stat="identity",color="white") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
labs(x="Emoji",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram2 <- ggplot(df.errors, aes(x=dummy,y=errors,color=emoji)) +
geom_histogram(stat="identity",color="white") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
labs(x="Emoji",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram2 <- ggplot(df.errors, aes(x=dummy,y=errors,color=emoji)) +
geom_histogram(stat="identity",color="white") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
labs(x="Emoji",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram2 <- ggplot(df.errors, aes(x=dummy,y=errors,fill=emoji)) +
geom_histogram(stat="identity") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
labs(x="Emoji",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,fill=emoji)) +
geom_histogram(stat="identity") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Emoji",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,fill=emoji)) +
geom_histogram(stat="identity") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=emoji)) +
geom_histogram(stat="identity") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=participant)) +
geom_histogram(stat="identity") +
#geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=participant,label=emoji)) +
geom_histogram(stat="identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=participant,label=participant)) +
geom_histogram(stat="identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
savePlot(errorHistogram4, "error-by-group-2.pdf",height=5,path="graphs")
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=participant,label=participant)) +
geom_histogram(stat="identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=errors,label=participant)) +
geom_histogram(stat="identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
savePlot(errorHistogram4, "error-by-group-3.pdf",height=5,path="graphs")
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=emoji)) +
geom_histogram(stat="identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,color=emoji,label=participant)) +
geom_histogram(stat="identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
savePlot(errorHistogram4, "error-by-group-4.pdf",height=5,path="graphs")
( # by group
errorHistogram4 <- ggplot(df.errors, aes(x=dummy,y=errors,label=emoji)) +
geom_histogram(stat="identity", color="white") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
savePlot(errorHistogram4, "error-by-group-5.pdf",height=5,path="graphs")
df.errors.details <- read.csv('./emoji-errors-details.csv', sep=';', header = T)
View(df.errors.details)
df.errors.details <- renameColumn(df.errors.details, "X...totalemoji","totalemoji")
df.errors.details <- renameColumn(df.errors.details, "X...condition","group")
df.errors.details$group <- as.character(df.errors.details$group)
df.errors.details$group[df.errors$group=='apple'] <- "Control Group"
df.errors.details$group[df.errors$group=='google'] <- "Experimental Group"
df.errors.details$group <- factor(df.errors.details$group);
df.errors <- read.csv('./emoji-errors-failed-logins.csv', sep=';', header = T)
df.errors.details <- read.csv('./emoji-errors-details.csv', sep=';', header = T)
df.errors <- renameColumn(df.errors, "X...condition","group")
df.errors.details <- renameColumn(df.errors.details, "X...condition","group")
df.errors.details <- renameColumn(df.errors.details, "X...totalemoji","totalemoji")
df.errors.details$group <- as.character(df.errors.details$group)
df.errors.details$group[df.errors.details$group=='apple'] <- "Control Group"
df.errors.details$group[df.errors.details$group=='google'] <- "Experimental Group"
df.errors.details$group <- factor(df.errors.details$group);
View(df.errors.details)
df.errors.details <- renameColumn(df.errors.details, "condition","group")
df.errors <- read.csv('./emoji-errors-failed-logins.csv', sep=';', header = T)
df.errors.details <- read.csv('./emoji-errors-details.csv', sep=';', header = T)
df.errors <- renameColumn(df.errors, "X...condition","group")
df.errors.details <- renameColumn(df.errors.details, "condition","group")
df.errors.details <- renameColumn(df.errors.details, "X...totalemoji","totalemoji")
df.errors.details$group <- as.character(df.errors.details$group)
df.errors.details$group[df.errors.details$group=='apple'] <- "Control Group"
df.errors.details$group[df.errors.details$group=='google'] <- "Experimental Group"
df.errors.details$group <- factor(df.errors.details$group);
df.errors.details <- read.csv('./emoji-errors-details.csv', sep=';', header = T)
df.errors.details <- renameColumn(df.errors.details, "condition","group")
df.errors.details <- renameColumn(df.errors.details, "X...totalemoji","totalemoji")
df.errors.details$group <- as.character(df.errors.details$group)
df.errors.details$group[df.errors.details$group=='apple'] <- "Control Group"
df.errors.details$group[df.errors.details$group=='google'] <- "Experimental Group"
df.errors.details$group <- factor(df.errors.details$group);
( # by group
detailHistogram1 <- ggplot(df.errors, aes(x=dummy,y=errors,label=emoji)) +
geom_histogram(stat="identity", color="white") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors, aes(x=dummy,y=errors,label=emoji)) +
geom_histogram(stat="identity", color="white") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors, aes(x=dummy,y=errors,label=emoji)) +
geom_bar(),
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors, aes(x=dummy,y=errors,label=emoji)) +
geom_bar() +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors, aes(x=dummy,y=errors,label=emoji)) +
geom_bar(stat = "identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
pos <- subset(df.errors.details,errors > 0)
neg <- subset(df.errors.details,errors < 0);
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
rm(pos,neg)
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "top") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "non") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
df.errors.details$totalerrors <- df.errors.details$totalemoji * df.errors.details$errors
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=totalerrors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Errors during log-in",color="Emoji")
)
df.errors.details$errors <- (-1) * df.errors.details$errors;
df.errors.details$totalerrors <- (-1) * df.errors.details$totalerrors
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Login Succuesses (positive) vs. Login Failures (negative)",color="Emoji")
)
savePlot(detailHistogram1, "detailed-by-emoji-1.pdf",height=5,path="graphs")
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Login Succuesses (positive) vs. Login Failures (negative)",color="Emoji") +
flip_coords()
)
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Login Succuesses (positive) vs. Login Failures (negative)",color="Emoji") +
coord_flip()
)
savePlot(detailHistogram1, "detailed-by-emoji-2.pdf",height=8,path="graphs")
library(plyr)
library(reshape2)
library(ggplot2)
source('../util.R')
savePlot(detailHistogram1, "detailed-by-emoji-2.pdf",height=8,path="graphs")
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 2, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Login Succuesses (positive) vs. Login Failures (negative)",color="Emoji")
)
savePlot(detailHistogram1, "detailed-by-emoji-2.pdf",height=8,path="graphs")
savePlot(detailHistogram1, "detailed-by-emoji-2.pdf",height=9,path="graphs")
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 4, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Successful (positive) and unsuccessful (negative) login attempts",color="Emoji")
)
savePlot(detailHistogram1, "detailed-by-emoji-2.pdf",height=9,path="graphs")
( # by group
detailHistogram1 <- ggplot(df.errors.details, aes(x=dummy,y=errors,label=emoji,fill=emoji)) +
#geom_bar(data = post, stat = "identity") +
geom_bar(stat = "identity",color="white") +
geom_hline(yintercept=0,color="black") +
geom_text( size = 3, position = position_stack(vjust = 0.5), color="white") +
#scale_x_discrete(limits=errorEmojiTicks) + # hack: the data is sorted (desc) so we used that info to discretely scale the x-axis.
#scale_y_continuous(breaks=seq(0,11,1)) +
facet_grid(group ~ category) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(axis.text.x = element_blank()) +
labs(x="Category",y="Successful (positive) and unsuccessful (negative) login attempts",color="Emoji")
)
savePlot(detailHistogram1, "detailed-by-emoji-2.pdf",height=9,path="graphs")
