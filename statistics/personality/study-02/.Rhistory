data <- read.csv("dataset-N100.csv", sep = ";", dec = ".")
View(data)
View(data)
data$D_Gender[data$D_Gender == "Male"] <- 1
data <- read.csv("dataset-N100.csv", sep = ";", dec = ".")
data$D_Gender <- factor(data$D_Gender,levels=(1,2),labels=c("Male","Female"))
data$D_Gender <- factor(data$D_Gender,levels=c(1,2),labels=c("Male","Female"))
data <- read.csv("dataset-N100.csv", sep = ";", dec = ".")
library(mgcv)
library(ggplot2)
library(plyr)
library(texreg)
library(lme4)
library(reshape2)
source("../../plotCI.R");
data <- read.csv("dataset-N100.csv", sep = ";", dec = ".")
View(data)
data$D_Gender <- factor(data$D_Gender,levels=c("Male","Female"),labels=c("Male","Female"))
data$D_ComputerScienceBackground <- factor(data$D_ComputerScienceBackground, levels=c("No","Yes"), lables=c("No","Yes"))
data$D_ComputerScienceBackground <- factor(data$D_ComputerScienceBackground, levels=c("No","Yes"), labels=c("No","Yes"))
rm(data)
d100 <- read.csv("dataset-N100.csv", sep = ";", dec = ".")
renameColumn(d100,"B5_Openness.to.Experiences","Openness")
renameColumn <- function(df,oldName,newName) {
names(df)[names(df) == oldName] <- newName
}
renameColumn(d100,"B5_Openness.to.Experiences","Openness")
renameColumn(d100,"B5_Openness to Experiences","Openness")
d100 <- read.csv("dataset-N100.csv", sep = ";", dec = ".")
d100$D_Gender <- factor(data$D_Gender,levels=c("Male","Female"),labels=c("Male","Female"))
d100$D_ComputerScienceBackground <- factor(data$D_ComputerScienceBackground, levels=c("No","Yes"), labels=c("No","Yes"))
d100$D_Gender <- factor(d100$D_Gender,levels=c("Male","Female"),labels=c("Male","Female"))
d100$D_ComputerScienceBackground <- factor(d100$D_ComputerScienceBackground, levels=c("No","Yes"), labels=c("No","Yes"))
View(d100)
rOverallModel <- gam(G_Overall ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
summary(rOverallModel)
rOverallModel_simple <- gam(G_Overall ~ D_Age + D_Gender + D_ComputerScienceBackground +
B5_Extraversion + B5_Agreeableness +
B5_Conscientiousness + s(B5_Neuroticism) +
B5_Openness,
data = d100)
summary(rOverallModel_simple)
library(visreg)
int_breaks <- function(x, n = 5) pretty(x, n)[pretty(x, n) %% 1 == 0]
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
controlVariables <- list("D_Age","D_Gender","D_ComputerScienceBackground");
predictorsB5 <- list("B5_Extraversion","B5_Agreeableness", "B5_Conscientiousness", "B5_Neuroticism", "B5_Openness")
plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
predictors
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
View(smooths)
plotGAM <- function(model, controlVariables, predictors, yLab=NULL, xLab.control=NULL,xLab.predictors=NULL) {
# use plot = FALSE to get plot data from visreg without plotting
plotData <- visreg(model, type = "contrast", plot = FALSE)
# The output from visreg is a list of the same length as the number of 'x' variables,
#   so we use ldply to pick the objects we want from the each list part and make a dataframe:
smooths <- ldply(plotData, function(part)
data.frame(Variable = part$meta$x,
x=part$fit[[part$meta$x]],
smooth=part$fit$visregFit,
lower=part$fit$visregLwr,
upper=part$fit$visregUpr))
#### subset datafor control variables and predictors
controlSmooths <- smooths[smooths$Variable %in% controlVariables,]
predictorSmooths <- smooths[smooths$Variable %in% predictors,]
predictorPlot <- ggplot(predictorSmooths, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(x="Trait Score")
controlPlot <- ggplot(controlSmooths, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(x="Control Variable Level")
if(!is.null(yLab)) {
predictorPlot <- predictorPlot + labs(y=yLab)
controlPlot <- controlPlot + labs(y=yLab)
}
if(!is.null(xLab.control)) {
controlPlot <- controlPlot + labs(x=xLab.control)
}
if(!is.null(xLab.predictors)) {
controlPlot <- controlPlot + labs(x=xLab.predictors)
}
list(predictorPlot,controlPlot)
}
x <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
x[[1]]
x[[2]]
rm(x)
library(visreg)
library(ggplot2)
library(plyr)
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source("../../plotGAM.R");
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source("../../plotGAM.R");
source('~/Dissertation/statistics/plotGAM.R')
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source('~/Dissertation/statistics/plotGAM.R')
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating")
rOverallPlots[[1]]
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
library(extrafont)
View(d100)
summary(rOverallModel_simple)
savePlot(rOverallPlots[[1]],"rating-overall-b5.pdf",path="graphs")
savePlot(rOverallPlots[[2]],"rating-overall-control.pdf",path="graphs")
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating",xLab.predictors = "Trait Score")
savePlot(rOverallPlots[[1]],"rating-overall-b5.pdf",path="graphs")
source('~/Dissertation/statistics/plotGAM.R')
rOverallPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab = "Overall Strength Rating",xLab.predictors = "Trait Score")
savePlot(rOverallPlots[[1]],"rating-overall-b5.pdf",path="graphs")
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
source('~/Dissertation/statistics/plotGAM.R')
View(plotCI)
source("../../util.R");
source("../../plotCI.R");
source("../../util.R");
predictorsSeBIS <- list("SeBIS_Securement","SeBIS_Awareness", "SeBIS_Updating", "SeBIS_Passwords")
predictorsGDMS <- list("GDMS_Rational","GDMS_Intuitive", "GDMS_Avoidant",  "GDMS_Dependent", "GDMS_Spontaneous")
for (i in responseVariablesRating) {
i
}
responseVariablesRating <- list("G_Common","G_Passphrase","G_Pattern",
"G_LengthLong","G_LengthShort",
"G_Weak","G_Medium","G_Strong",
"G_Digits","G_Special","G_Uppercase")
for (i in responseVariablesRating) {
i
}
for (i in responseVariablesRating) {
summary(i)
}
for (i in responseVariablesRating) {
autoGam <- gam(data[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
autoGamPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab=i,xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf")
autoFileNameControl <- paste("rating-",i,"-control.pdf")
savePlot(rOverallPlots[[1]],autoFileNameB5,path="graphs")
savePlot(rOverallPlots[[2]],autoFileNameControl,path="graphs")
}
for (i in responseVariablesRating) {
autoGam <- gam(d100[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
autoGamPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab=i,xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf")
autoFileNameControl <- paste("rating-",i,"-control.pdf")
savePlot(rOverallPlots[[1]],autoFileNameB5,path="graphs")
savePlot(rOverallPlots[[2]],autoFileNameControl,path="graphs")
}
for (i in responseVariablesRating) {
autoGam <- gam(d100[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
autoGamPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5,yLab=i,xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
savePlot(rOverallPlots[[1]],autoFileNameB5,path="graphs")
savePlot(rOverallPlots[[2]],autoFileNameControl,path="graphs")
}
source("../../plotGAM.R");
for (i in responseVariablesRating) {
autoGam <- gam(d100[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
autoGamPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5, yLab=i ,xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
savePlot(rOverallPlots[[1]],autoFileNameB5,path="graphs")
savePlot(rOverallPlots[[2]],autoFileNameControl,path="graphs")
}
for (i in responseVariablesRating) {
autoGam <- gam(d100[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
autoGamPlots <- plotGAM(rOverallModel_simple,controlVariables = controlVariables, predictors = predictorsB5, yLab=i ,xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
}
for (i in responseVariablesRating) {
autoGam <- gam(d100[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
autoGamPlots <- plotGAM(autoGam,controlVariables = controlVariables, predictors = predictorsB5, yLab=i ,xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
}
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
summary(autoGam)
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', encoding = 'UTF-8', echo=TRUE)
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
plotGAM(autoGam,controlVariables=c("D_Age"),predictors=c("B5_Openness"))
for (i in responseVariablesRating) {
autoGam <- gam(d100[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=i, xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
}
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
for (i in responseVariablesRating) {
autoGam <- gam(d100[[i]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
print(summary(autoGam))
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=i, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
}
colname(d100$D_Gender)
colnames(d100$D_Gender)
colnames(d100)
autoGam <- gam(G_Common ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=i, xLab.predictors = "Trait Score")
names(d100$D_Gender)
names(d100)
testVariables <- list("G_Digits","G_Special","G_Uppercase")
autoFun <- function(name){
autoGam <- gam([[name]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
print(summary(autoGam))
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=i, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
}
autoFun <- function(name){
autoGam <- gam(d100[[name]] ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
print(summary(autoGam))
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=i, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
}
lapply(testVariables,autoFun);
names(subset(d),select=responseVariablesRating)
names(subset(d100,select=responseVariablesRating))
names(subset(d100,select=responseVariablesRating))
subset(d100,select=responseVariablesRating)
d100[responseVariablesRating,]
responseVariablesRating <- c("G_Common","G_Passphrase","G_Pattern",
"G_LengthLong","G_LengthShort",
"G_Weak","G_Medium","G_Strong",
"G_Digits","G_Special","G_Uppercase")
subset(d100,select=responseVariablesRating)
d100[responseVariablesRating,]
d100[,responseVariablesRating]
lapply(
d100[,responseVariablesRating],
function(var){
autoGam <- gam(var ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
print(summary(autoGam))
}
)
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
autoModelsRating <- lapply(
d100[,responseVariablesRating],
function(var){
autoGam <- gam(var ~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness),
data = d100)
}
)
autoModelsRating[[1]]
autoModelsRating <- lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)")
autoGam <- gam(autoFormula, data=d100);
})
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
debugSource('~/Dissertation/statistics/personality/study-02/rating.R', echo=TRUE)
lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
autoGam <- gam(autoFormula, data=d100);
autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=i, xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",i,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",i,"-control.pdf",sep="")
savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
})
lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
autoGam <- gam(autoFormula, data=d100);
autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
})
autoModelsRating <- lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
autoGam <- gam(autoFormula, data=d100);
autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
autoGam
})
autoModelsRating[1]
summary(autoModelsRating[1])
summary(autoModelsRating)
summary(autoModelsRating[1])
autoModelsRating$1
autoModelsRating
autoModelsRating <- lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
autoGam <- gam(autoFormula, data=d100);
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
sink("out/" + paste("rating-",column,".txt",sep=""))
summary(autoGam)
sink()
})
autoModelsRating <- lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
autoGam <- gam(autoFormula, data=d100);
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
sink(paste("out/rating-",column,".txt",sep=""))
summary(autoGam)
sink()
})
autoModelsRating <- lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
gam(autoFormula, data=d100);
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
})
autoModelsRating[1]$coefficients
autoModelsRating[[1]]$coefficients
autoModelsRating[1]
autoModelsRating[[1]]$method
autoModelsRating[[1]]$y
autoModelsRating[[1]]$contrasts
autoModelsRating[[1]]$formula
typeof(autoModelsRating[[1]]$formula)
all.vars(autoModelsRating[[1]]$formula))
all.vars(autoModelsRating[[1]]$formula)
all.vars(autoModelsRating[[1]]$formula)[1]
lapply(autoModelsRating, function(model){
# the first variable of the formula is the dependent variable.
sinkFilename <- paste("out/rating-",all.vars(model$formula)[1],".txt",sep="");
sink(sinkFilename)
summary(model)
})
summary(autoModelsRating[1])
autoModelsRating[1]
autoModelsRating <- lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
gam(autoFormula, data=d100);
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
})
autoModelsRating[1]
autoModelsRating
summary(autoGam)
library(mgcv)
library(ggplot2)
library(plyr)
library(texreg)
library(lme4)
library(reshape2)
library(visreg)
source("../../plotGAM.R");
source("../../util.R");
source("../../plotCI.R");
d100 <- read.csv("dataset-N100.csv", sep = ";", dec = ".")
d100$D_Gender <- factor(d100$D_Gender,levels=c("Male","Female"),labels=c("Male","Female"))
d100$D_ComputerScienceBackground <- factor(d100$D_ComputerScienceBackground, levels=c("No","Yes"), labels=c("No","Yes"))
responseVariablesRating <- c("G_Common","G_Passphrase","G_Pattern",
"G_LengthLong","G_LengthShort",
"G_Weak","G_Medium","G_Strong",
"G_Digits","G_Special","G_Uppercase")
controlVariables <- list("D_Age","D_Gender","D_ComputerScienceBackground")
predictorsB5 <- list("B5_Extraversion","B5_Agreeableness", "B5_Conscientiousness", "B5_Neuroticism", "B5_Openness")
predictorsB5 <- list("B5_Extraversion","B5_Agreeableness", "B5_Conscientiousness", "B5_Neuroticism", "B5_Openness")
predictorsSeBIS <- list("SeBIS_Securement","SeBIS_Awareness", "SeBIS_Updating", "SeBIS_Passwords")
predictorsGDMS <- list("GDMS_Rational","GDMS_Intuitive", "GDMS_Avoidant",  "GDMS_Dependent", "GDMS_Spontaneous")
autoModelsRating <- lapply(responseVariablesRating,function(column, d){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
gam(autoFormula, data=d);
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
}, data=d100)
autoModelsRating <- lapply(responseVariablesRating,function(column){
autoFormula <- as.formula(paste(column,"~ s(D_Age) + D_Gender + D_ComputerScienceBackground + s(B5_Extraversion) + s(B5_Agreeableness) +
s(B5_Conscientiousness) + s(B5_Neuroticism) + s(B5_Openness)"))
gam(autoFormula, data=d100);
#autoGamPlots <- plotGAM(autoGam, controlVariables = controlVariables, predictors = predictorsB5, yLab=column, xLab.predictors = "Trait Score")
#autoFileNameB5 <- paste("rating-",column,"-b5.pdf",sep="")
#autoFileNameControl <- paste("rating-",column,"-control.pdf",sep="")
#savePlot(autoGamPlots[[1]],autoFileNameB5,path="graphs")
#savePlot(autoGamPlots[[2]],autoFileNameControl,path="graphs")
})
summary(autoModelsRating)
lapply(autoModelsRating, function(model){
# the first variable of the formula is the dependent variable.
sinkFilename <- paste("out/rating-",all.vars(model$formula)[1],".txt",sep="");
sink(sinkFilename)
summary(model)
})
sink()
autoModelsRating
summary(autoModelsRating)
dev.off()
1+1
sink()
1+1
asdf
lapply(autoModelsRating, function(model){
# the first variable of the formula is the dependent variable.
sinkFilename <- paste("out/rating-",all.vars(model$formula)[1],".txt",sep="");
sink(sinkFilename)
summary(model)
sink()
})
sink.number()
sink(file=NULL)
1ß1
101
