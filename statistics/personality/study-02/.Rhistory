predictorsFeatures <- list("digits","symbols","uppercase","substitutions","length","score");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=7))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel)
summary(featuresModel_simple)
AIC(rOverallModel,featuresModel,featuresModel_simple, manualMixedGam)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
(B5_Openness * B5_Conscientiousness * B5_Agreeableness * B5_Extraversion * B5_Neuroticism)
, method="REML", data = merged)
summary(manualMixedGam)
outputSummary(manualMixedGam,prefix="03-",path="summaries/mixed")
manualMixedPlot <- plotGAM(manualMixedGam,predictors=list("digits","length","lowercase","symbols","uppercase","chunks","substitutions","score"),
controlVariables = predictorsB5,
xLab.predictors = "Feature Count",
xLab.control = "Feature dependencies",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualMixedPlot[[1]],filename="rating-manual-mixed-v2-predictors.pdf",path="graphs/mixed")
savePlot(manualMixedPlot[[2]],filename="rating-manual-mixed-v2-b5.pdf",path="graphs/mixed")
source('~/Dissertation/statistics/plotGAM.R')
manualMixedPlot <- plotGAM(manualMixedGam,predictors=list("digits","length","lowercase","symbols","uppercase","chunks","substitutions","score"),
controlVariables = predictorsB5,
xLab.predictors = "Feature Count",
xLab.control = "Big Five Trait Scores",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualMixedPlot[[1]],filename="rating-manual-mixed-v2-predictors.pdf",path="graphs/mixed")
savePlot(manualMixedPlot[[2]],filename="rating-manual-mixed-v2-b5.pdf",path="graphs/mixed")
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness * B5_Conscientiousness * B5_Agreeableness * B5_Extraversion * B5_Neuroticism)
, method="REML", data = merged)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
(B5_Openness * B5_Conscientiousness * B5_Agreeableness * B5_Extraversion * B5_Neuroticism)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) + s(B5_Conscientiousness,k=7) +
s(B5_Agreeableness,k=7) + s(B5_Extraversion,k=7) +
s(B5_Neuroticism,k=7)
, method="REML", data = merged)
summary(manualMixedGam)
AIC(rOverallModel,featuresModel,featuresModel_simple, manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) + s(B5_Conscientiousness,k=7) +
s(B5_Agreeableness,k=7) + s(B5_Extraversion,k=7) +
s(B5_Neuroticism,k=8)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) + s(B5_Conscientiousness,k=7) +
s(B5_Agreeableness,k=7) + s(B5_Extraversion,k=7) +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) + s(B5_Conscientiousness,k=7) +
B5_Agreeableness + s(B5_Extraversion,k=7) +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) + B5_Conscientiousness +
B5_Agreeableness + s(B5_Extraversion,k=7) +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
outputSummary(manualMixedGam,prefix="04-",path="summaries/mixed")
manualMixedPlot <- plotGAM(manualMixedGam,predictors=list("digits","length","lowercase","symbols","uppercase","chunks","substitutions","score"),
controlVariables = predictorsB5,
xLab.predictors = "Feature Count",
xLab.control = "Big Five Trait Scores",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualMixedPlot[[1]],filename="rating-manual-mixed-v3-predictors.pdf",path="graphs/mixed")
savePlot(manualMixedPlot[[2]],filename="rating-manual-mixed-v3-b5.pdf",path="graphs/mixed")
manualMixedPlot[[2]]
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) +
B5_Agreeableness + B5_Extraversion +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
AIC(rOverallModel,featuresModel,featuresModel_simple, manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
AIC(rOverallModel,featuresModel,featuresModel_simple, manualMixedGam)
anova(featuresModel_simple,manualMixedGam)
summary(featuresModel_simple)
predictorsFeatures <- list("digits","symbols","uppercase","substitutions","length");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=7))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
plotreg(
list(featuresModel_simple, manualMixedGam),
custom.model.names = c("Features + B5","Features + B5 (with interactions on length)"),
file="graphs/mixed/comparison.pdf"
)
library(textreg)
library(texreg)
plotreg(
list(featuresModel_simple, manualMixedGam),
custom.model.names = c("Features + B5","Features + B5 (with interactions on length)"),
file="graphs/mixed/comparison.pdf"
)
predictorsFeatures <- list("digits","symbols","uppercase","lowercase");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=7))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
outputSummary(featuresModel_simple,path="summaries/mixed")
mixedModelPlot <- plotGAM(featuresModel_simple,predictors=predictorsMixedGraph)
mixedModelPlot <- plotGAM(featuresModel, predictors=predictorsFeatures,controlVariables = predictorsB5)
savePlot(mixedModelPlot[[1]],filename="rating-mixed-v1-predictors.pdf",path="graphs/mixed")
savePlot(mixedModelPlot[[2]],filename="rating-mixed-v1-b5.pdf",path="graphs/mixed")
AIC(rOverallModel,featuresModel,featuresModel_simple, manualMixedGam)
AIC(featuresModel,featuresModel_simple, manualMixedGam)
anova(featuresModel_simple,manualMixedGam)
plotreg(
list(featuresModel_simple, manualMixedGam),
custom.model.names = c("Features + B5","Features + B5 (with interactions on length)"),
file="graphs/mixed/comparison.pdf"
)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
AIC(featuresModel,featuresModel_simple, manualMixedGam)
anova(featuresModel_simple,manualMixedGam)
predictorsFeatures <- list("digits","symbols","uppercase","lowercase","substitutions");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=7))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
predictorsFeatures <- list("digits","symbols","uppercase","(lowercase *substitutions)");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=7))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
AIC(featuresModel,featuresModel_simple, manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (symbols*substitutions)
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (symbols*substitutions) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
predictorsFeatures <- list("digits","symbols","uppercase","(symbols * substitutions)");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=7))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=8))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=10))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel)
summary(featuresModel_simple)
predictorsB5 <- list(  "B5_Openness",
#"B5_Conscientiousness",
"B5_Extraversion",
"B5_Agreeableness",
"B5_Neuroticism")
predictorsFeatures <- list("digits","symbols","uppercase","(symbols * substitutions)");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=10))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
AIC(featuresModel,featuresModel_simple, manualMixedGam)
predictorsB5 <- list(  "B5_Openness",
#"B5_Conscientiousness",
#"B5_Extraversion",
"B5_Agreeableness",
"B5_Neuroticism")
predictorsFeatures <- list("digits","symbols","uppercase","(symbols * substitutions)");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=10))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
outputSummary(featuresModel_simple,path="summaries/mixed")
plot(featuresModel_simple,jit=TRUE,pages=1)
mixedModelPlot <- plotGAM(featuresModel, predictors=predictorsFeatures,controlVariables = predictorsB5)
savePlot(mixedModelPlot[[1]],filename="rating-mixed-v1-predictors.pdf",path="graphs/mixed")
savePlot(mixedModelPlot[[2]],filename="rating-mixed-v1-b5.pdf",path="graphs/mixed")
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (symbols*substitutions) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
outputSummary(manualMixedGam,prefix="05-",path="summaries/mixed")
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
B5_Conscientiousness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
B5_Extraversion +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) +
B5_Agreeableness +
B5_Extraversion +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + guesses_log10 +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
outputSummary(manualMixedGam,prefix="06-",path="summaries/mixed")
manualMixedPlot <- plotGAM(manualMixedGam,predictors=list("digits","length","lowercase","symbols","uppercase","chunks","substitutions","score"),
controlVariables = predictorsB5,
xLab.predictors = "Feature Count",
xLab.control = "Big Five Trait Scores",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualMixedPlot[[1]],filename="rating-manual-mixed-v3-predictors.pdf",path="graphs/mixed")
savePlot(manualMixedPlot[[2]],filename="rating-manual-mixed-v3-b5.pdf",path="graphs/mixed")
manualMixedPlot[[1]]
merged[!password=='F@m1Ly07%']
merged[!marged$password=='F@m1Ly07%']
merged[!merged$password=='F@m1Ly07%']
merged[merged$password=='F@m1Ly07%']
merged[merged$password=='F@m1Ly07%',]
merged[merged$password!='F@m1Ly07%',]
merged[merged$password!='F@m1Ly07%' & merged$password!='p@ssw0rd',]
mergedNoLeet <- merged[merged$password!='F@m1Ly07%' & merged$password!='p@ssw0rd',]
manualMixedGam_noLeet <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = mergedNoLeet)
summary(manualMixedGam_noLeet)
manualMixedGam_noLeet <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = mergedNoLeet)
summary(manualMixedGam_noLeet)
manualMixedGam_noLeet <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B_Extraversion) +
s(B5_Neuroticism,k=9)
, method="REML", data = mergedNoLeet)
manualMixedGam_noLeet <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Extraversion) +
s(B5_Neuroticism,k=9)
, method="REML", data = mergedNoLeet)
summary(manualMixedGam_noLeet)
manualMixedGam_noLeet <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Conscientiousness) +
s(B5_Neuroticism,k=9)
, method="REML", data = mergedNoLeet)
summary(manualMixedGam_noLeet)
AIC(featuresModel,featuresModel_simple, manualMixedGam, manualMixedGam_noLeet)
outputSummary(manualMixedGam,prefix="06-noLeet-",path="summaries/mixed")
savePlot(manualMixedPlot[[1]],filename="rating-manual-mixed-v3-predictors.pdf",path="graphs/mixed")
savePlot(manualMixedPlot[[2]],filename="rating-manual-mixed-v3-b5.pdf",path="graphs/mixed")
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions + (digits*substitutions)
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + substitutions + (digits*substitutions) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
AIC(featuresModel,featuresModel_simple, manualMixedGam, manualMixedGam_noLeet)
outputSummary(manualMixedGam,prefix="07-",path="summaries/mixed")
manualMixedPlot <- plotGAM(manualMixedGam,predictors=list("digits","length","lowercase","symbols","uppercase","chunks","substitutions","score"),
controlVariables = predictorsB5,
xLab.predictors = "Feature Count",
xLab.control = "Big Five Trait Scores",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualMixedPlot[[1]],filename="rating-manual-mixed-v7-predictors.pdf",path="graphs/mixed")
savePlot(manualMixedPlot[[2]],filename="rating-manual-mixed-v7-b5.pdf",path="graphs/mixed")
manualMixedPlot[[1]]
simpleLM <- lm(rating ~ lowercase + uppercase + digits + symbols, data=merged)
summary(simpleLM)
simpleFeaturesGam <- gam(rating ~ lowercase + uppercase + digits + symbols, data=merged)
summary(simpleFeaturesGam)
simpleFeaturesGam <- gam(rating ~ lowercase + uppercase + digits + symbols, method="REML",data=merged)
summary(simpleFeaturesGam)
outputSummary(manualMixedGam,prefix="simple-",path="summaries/mixed")
manualSimplePlot <- plotGAM(manualMixedGam,predictors=list("digits","length","lowercase","symbols","uppercase"),
xLab.predictors = "Feature Count",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualSimplePlot[[1]],filename="rating-manual-simple.pdf",path="graphs/mixed")
outputSummary(simpleFeaturesGam,prefix="simple-",path="summaries/mixed")
manualSimplePlot <- plotGAM(simpleFeaturesGam,predictors=list("digits","length","lowercase","symbols","uppercase"),
xLab.predictors = "Feature Count",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualSimplePlot[[1]],filename="rating-manual-simple.pdf",path="graphs/mixed")
library(itsadug)
gamtabs(simpleFeaturesGam)
predictorsB5 <- list(  "B5_Openness",
"B5_Conscientiousness",
"B5_Extraversion",
"B5_Agreeableness",
"B5_Neuroticism")
predictorsFeatures <- list("digits","symbols","uppercase","lowercase");
predictorsMixedModel <- c(predictorsFeatures,lapply(predictorsB5,smoothPredictors,k=10))
predictorsMixedGraph <- c(predictorsFeatures,predictorsB5)
predictorString <- paste(predictorsMixedModel,collapse = "+");
autoFormula <- as.formula(paste("rating",predictorString,sep = "~"))
featuresModel <- gam(autoFormula, data=merged, method="REML")
featuresModel_simple <- simplifyGAM(featuresModel)
summary(featuresModel_simple)
outputSummary(featuresModel_simple,prefix="rating-simple-b5-", path="summaries/mixed")
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (digits*substitutions*symbols) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
AIC(featuresModel,featuresModel_simple, manualMixedGam, manualMixedGam_noLeet)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (digits*substitutions*symbols) +
s(B5_Openness,k=7) +
B5_Agreeableness +
s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
outputSummary(manualMixedGam,prefix="08-",path="summaries/mixed")
manualMixedPlot <- plotGAM(manualMixedGam,predictors=list("digits","length","lowercase","symbols","uppercase","chunks","substitutions","score"),
controlVariables = predictorsB5,
xLab.predictors = "Feature Count",
xLab.control = "Big Five Trait Scores",
yLab = "Password Rating",
plotResiduals = FALSE
)
savePlot(manualMixedPlot[[1]],filename="rating-manual-mixed-v8-predictors.pdf",path="graphs/mixed")
savePlot(manualMixedPlot[[2]],filename="rating-manual-mixed-v8-b5.pdf",path="graphs/mixed")
manualMixedPlot[[1]]
manualMixedPlot[[2]]
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (digits*substitutions*symbols) +
#                        s(B5_Openness,k=7) +
#                        B5_Agreeableness +
#                        s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (digits*substitutions*symbols) +
#                        s(B5_Openness,k=7) +
#                        B5_Agreeableness +
#                        s(B5_Neuroticism,k=9)
, method="REML", data = merged)
manualMixedGam <- gam(rating ~ (digits * length) + (lowercase * length) + (symbols * length) +
(uppercase * length) + (digits*substitutions*symbols)
#                        s(B5_Openness,k=7) +
#                        B5_Agreeableness +
#                        s(B5_Neuroticism,k=9)
, method="REML", data = merged)
summary(manualMixedGam)
simpleFeaturesGam <- gam(rating ~ lowercase + uppercase + digits + substitutions, method="REML",data=merged)
summary(simpleFeaturesGam)
summary(manualMixedGam)
AIC(featuresModel,featuresModel_simple, manualMixedGam, manualMixedGam_noLeet)
AIC(featuresModel,featuresModel_simple,simpleFeaturesGam, manualMixedGam, manualMixedGam_noLeet)
AIC(featuresModel,featuresModel_simple,simpleFeaturesGam, manualMixedGam)
(boxPlotRatings <- ggplot(dLong) +
geom_boxplot(aes(x=password,y=rating,color=password)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7)) +
scale_x_discrete(labels=c()) +
#coord_flip() +
guides(colour = guide_legend(reverse=T)) +
labs(y="Average Rating",x="Password",col="Password")
)
(boxPlotRatings <- ggplot(dLong) +
geom_boxplot(aes(x=password,y=rating,color=password)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7)) +
scale_x_discrete(labels=c()) +
#coord_flip() +
#guides(colour = guide_legend(reverse=T)) +
labs(y="Rating",x="Password",col="Password")
)
(boxPlotRatings <- ggplot(dLong) +
geom_boxplot(aes(x=password,y=rating,color=password)) +
scale_y_continuous(breaks = c(1,2,3,4,5,6,7)) +
scale_x_discrete(labels=c()) +
#coord_flip() +
#guides(colour = guide_legend(reverse=T)) +
labs(y="Rating",x="Password",col="Passwords")
)
savePlot(boxPlotRatings,filename="boxplot-ratings-pws-v2.pdf",width=10,height=3,path="graphs")
savePlot(boxPlotRatings,filename="boxplot-ratings-pws-v2.pdf",width=10,height=4,path="graphs")
