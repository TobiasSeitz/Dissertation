facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password")
ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score")
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
rm(*)
rm(datenDif)
rm(datenRat)
rm(cd1)
rm(cd1Plotdata)
rm(emojiDifficulty)
rm(emojiDifficultyPlotData)
rm(model1)
rm(model1_emoji)
rm(smoothsCd1)
library(mgcv)
library(ggplot2)
library(visreg)
library(plyr)
library("texreg")
data.diffculty <- read.csv("data/data_creationDifficult_emoji12 (121 Datasets).CSV",
sep = ";", dec = ",")
data.ratings <- read.csv("data/data_creationRating_emoji12 (103 Datasets).CSV",
sep = ";", dec = ",")
names(data.diffculty)[names(data.diffculty) == "Geschlecht"] <- "Gender"
names(data.diffculty)[names(data.diffculty) == "Alter"] <- "Age"
names(data.ratings)[names(data.ratings) == "Geschlecht"] <- "Gender"
names(data.ratings)[names(data.ratings) == "Alter"] <- "Age"
data.diffculty$Gender[data.diffculty$Gender == 3] <- NA
data.diffculty$Gender <- factor(data.diffculty$Gender)
data.diffculty$IT <- factor(data.diffculty$IT)
data.diffculty$emojiPos <- factor(data.diffculty$emojiPos)
data.diffculty$twoWordPos <- factor(data.diffculty$twoWordPos)
data.diffculty$threeClassPos <- factor(data.diffculty$threeClassPos)
data.ratings$Gender[data.ratings$Geschlecht == 3] <- NA
data.ratings$Gender <- factor(data.ratings$Gender)
data.ratings$IT <- factor(data.ratings$IT)
data.ratings$emojiPos <- factor(data.ratings$emojiPos)
data.ratings$twoWordPos <- factor(data.ratings$twoWordPos)
data.ratings$threeClassPos <- factor(data.ratings$threeClassPos)
emojiDifficulty <- gam(emojiDif ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openess) + emojiPos,
data = data.diffculty)
summary(emojiDifficulty)
emojiDifficultyPlotData <- visreg(emojiDifficulty, type = "contrast", plot = TRUE)
emojiDifficultyPlotData
View(data.diffculty)
View(data.ratings)
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
ggsave(plot=p, filename="policies-distribution.pdf", path="policies", width=20, height=8.0)
ggsave(plot=p, filename="dc-emoji-b5.pdf", path="graphs", width=20, height=8.0)
ggsave(plot=p, filename="dc-emoji-b5.pdf", path="graphs", width=10, height=4.0)
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level"))
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable) +
labs(y="Difficulty to create emoji password", x="Control Variable Level"))
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")) +
theme(axis.text.x = element_text(size = 5, angle = 90),
axis.text.y = element_text(size = 8),
axis.title.x = element_text(vjust = 0),
axis.ticks = element_blank(),
panel.grid.minor = element_blank())
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")) +
theme(panel.grid.minor = element_blank())
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level"))
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level"))
ggsave(plot=p, filename="dc-emoji-control.pdf", path="graphs", width=10, height=4.0)
ggsave(plot=p, filename="dc-emoji-b5.pdf", path="graphs", width=10, height=3.0)
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
ggsave(plot=p, filename="dc-emoji-b5.pdf", path="graphs", width=10, height=3.0)
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level") +
theme(axis.ticks.length = 1)
)
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level") +
scale_x_discrete()
)
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level") +
scale_x_discrete(limits=c(5,10,15,20))
)
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level") +
)
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_discrete() +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_discrete(limitedLabels(5)) +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_discrete(limits=c(5,10,15,20)) +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
int_breaks <- function(x, n = 5) pretty(x, n)[pretty(x, n) %% 1 == 0]
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
ggsave(plot=p, filename="dc-emoji-b5.pdf", path="graphs", width=10, height=3.0)
(p <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
ggsave(plot=p, filename="dc-emoji-control.pdf", path="graphs", width=10, height=4.0)
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
geom_point() +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
View(smoothsEmojiDifficulty)
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
geom_point(aes(x=x, y=0)) +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(p <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(pDCEmojiB5 <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
ggsave(plot=pDCEmojiB5, filename="dc-emoji-b5.pdf", path="graphs", width=10, height=3.0)
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
ggsave(plot=pDCEmojiCTRL, filename="dc-emoji-control.pdf", path="graphs", width=10, height=4.0)
positionLabels <- c("Task Number (emoji12)", "Task Number (2word12)", "Task Number (3class12)")
labels(data.diffculty,which=c("emojiPos","twoWordPos","threeClassPos")) <- positionLabels;
View(data.ratings)
names(data.diffculty)[names(data.diffculty) == "Openess"] <- "Openness"
names(data.ratings)[names(data.ratings) == "Openess"] <- "Openness"
# Variablen richtig kodieren
data.diffculty$Gender[data.diffculty$Gender == 3] <- NA
data.diffculty$Gender <- factor(data.diffculty$Gender)
data.diffculty$IT <- factor(data.diffculty$IT)
data.diffculty$emojiPos <- factor(data.diffculty$emojiPos)
data.diffculty$twoWordPos <- factor(data.diffculty$twoWordPos)
data.diffculty$threeClassPos <- factor(data.diffculty$threeClassPos)
data.ratings$Gender[data.ratings$Geschlecht == 3] <- NA
data.ratings$Gender <- factor(data.ratings$Gender)
data.ratings$IT <- factor(data.ratings$IT)
data.ratings$emojiPos <- factor(data.ratings$emojiPos)
data.ratings$twoWordPos <- factor(data.ratings$twoWordPos)
data.ratings$threeClassPos <- factor(data.ratings$threeClassPos)
# Model for creationDifficulty -- emoiji12 ----------------------------------------------------------
# Assume non-linear effects for all continous variables (all but gender, IT, and emojiPos)
emojiDifficulty <- gam(emojiDif ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + emojiPos,
data = data.diffculty)
summary(emojiDifficulty)
# plot(emojiDifficulty, pages = 1, jit=TRUE, scale = 0)
# use plot = FALSE to get plot data from visreg without plotting
emojiDifficultyPlotData <- visreg(emojiDifficulty, type = "contrast", plot = FALSE)
# The output from visreg is a list of the same length as the number of 'x' variables,
#   so we use ldply to pick the objects we want from the each list part and make a dataframe:
smoothsEmojiDifficulty <- ldply(emojiDifficultyPlotData, function(part)
data.frame(Variable = part$meta$x,
x=part$fit[[part$meta$x]],
smooth=part$fit$visregFit,
lower=part$fit$visregLwr,
upper=part$fit$visregUpr))
#### subset datafor control variables
smoothsEmojiDifficulty.control <- smoothsEmojiDifficulty[
which(smoothsEmojiDifficulty$Variable == 'Age' |
smoothsEmojiDifficulty$Variable == 'Gender' |
smoothsEmojiDifficulty$Variable == 'IT' |
smoothsEmojiDifficulty$Variable == 'emojiPos'),];
smoothsEmojiDifficulty.bigfive <- smoothsEmojiDifficulty[
which(smoothsEmojiDifficulty$Variable == 'Extraversion' |
smoothsEmojiDifficulty$Variable == 'Agreeableness' |
smoothsEmojiDifficulty$Variable == 'Conscientiousness' |
smoothsEmojiDifficulty$Variable == 'Neuroticism' |
smoothsEmojiDifficulty$Variable == 'Openness'
),];
# The ggplot:
int_breaks <- function(x, n = 5) pretty(x, n)[pretty(x, n) %% 1 == 0]
(pDCEmojiB5 <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
ggsave(plot=pDCEmojiB5, filename="dc-emoji-b5.pdf", path="graphs", width=10, height=3.0)
data.diffculty$Gender <- factor(data.diffculty$Gender,levels=c(1,2),labels=c("Male","Female"))
View(data.diffculty)
data.diffculty$IT <- factor(data.diffculty$IT,levels=c(1,2),labels=c("No","Yes"))
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
data.ratings$Gender <- factor(data.ratings$Gender,levels=c(1,2),labels=c("Male","Female"))
data.ratings$IT <- factor(data.ratings$IT,levels=c(1,2),labels=c("No","Yes"))
emojiDifficulty <- gam(emojiDif ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + emojiPos,
data = data.diffculty)
summary(emojiDifficulty)
data.diffculty$IT <- factor(data.diffculty$IT,levels=c(1,2),labels=c("Yes","No"))
data.ratings$IT <- factor(data.ratings$IT,levels=c(1,2),labels=c("Yes","No"))
emojiDifficulty <- gam(emojiDif ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + emojiPos,
data = data.diffculty)
summary(emojiDifficulty)
plot(emojiDifficulty, pages = 1, jit=TRUE, scale = 0)
emojiDifficultyPlotData <- visreg(emojiDifficulty, type = "contrast", plot = FALSE)
smoothsEmojiDifficulty <- ldply(emojiDifficultyPlotData, function(part)
data.frame(Variable = part$meta$x,
x=part$fit[[part$meta$x]],
smooth=part$fit$visregFit,
lower=part$fit$visregLwr,
upper=part$fit$visregUpr))
smoothsEmojiDifficulty.control <- smoothsEmojiDifficulty[
which(smoothsEmojiDifficulty$Variable == 'Age' |
smoothsEmojiDifficulty$Variable == 'Gender' |
smoothsEmojiDifficulty$Variable == 'IT' |
smoothsEmojiDifficulty$Variable == 'emojiPos'),];
smoothsEmojiDifficulty.bigfive <- smoothsEmojiDifficulty[
which(smoothsEmojiDifficulty$Variable == 'Extraversion' |
smoothsEmojiDifficulty$Variable == 'Agreeableness' |
smoothsEmojiDifficulty$Variable == 'Conscientiousness' |
smoothsEmojiDifficulty$Variable == 'Neuroticism' |
smoothsEmojiDifficulty$Variable == 'Openness'
),];
int_breaks <- function(x, n = 5) pretty(x, n)[pretty(x, n) %% 1 == 0]
(pDCEmojiB5 <- ggplot(smoothsEmojiDifficulty.bigfive, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Trait Score"))
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x", labeller=label_both) +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x", labeller=label_parsed) +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
View(smoothsEmojiDifficulty.control)
levels(smoothsEmojiDifficulty.control$Variable)[levels(smoothsEmojiDifficulty.control$Variable) == 'emojiPos'] <- "Task Number (emoji12)"
View(smoothsEmojiDifficulty.control)
emojiDifficulty <- gam(emojiDif ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + emojiPos,
data = data.diffculty)
summary(emojiDifficulty)
emojiDifficultyPlotData <- visreg(emojiDifficulty, type = "contrast", plot = FALSE)
levels(smoothsEmojiDifficulty.control$Variable)[levels(smoothsEmojiDifficulty.control$Variable) == 'emojiPos'] <- "Task Number (emoji12)"
int_breaks <- function(x, n = 5) pretty(x, n)[pretty(x, n) %% 1 == 0]
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
smoothsEmojiDifficulty.control$x[levels(smoothsEmojiDifficulty.control$Variable) == 'emojiPos'] <- factor(smoothsEmojiDifficulty.control$x,levels=c(1,2),labels=c("Male","Female"))
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
width <- 10
height <- 3.0
(pDCEmojiCTRL <- ggplot(smoothsEmojiDifficulty.control, aes(x, smooth)) + geom_line() +
geom_line(aes(y=lower), linetype="dashed") +
geom_line(aes(y=upper), linetype="dashed") +
scale_x_continuous(breaks=int_breaks)+
facet_grid(. ~ Variable, scales = "free_x") +
labs(y="Difficulty to create emoji password", x="Control Variable Level")
)
ggsave(plot=pDCEmojiCTRL, filename="dc-emoji-control.pdf", path="graphs", width=width, height=height)
summary(emojiDifficulty)
lö
model1_emoji <- gam(emojiDif ~ Age + Gender + IT + Extraversion + s(Agreeableness) +
Conscientiousness + Neuroticism + s(Openness) + emojiPos,
data = data.diffculty)
plot(model1_emoji, pages = 1, jit=TRUE)
View(data.diffculty)
data.diffculty <- read.csv("data/data_creationDifficult_emoji12 (121 Datasets).CSV",
sep = ";", dec = ",")
names(data.diffculty)[names(data.diffculty) == "Geschlecht"] <- "Gender"
names(data.diffculty)[names(data.diffculty) == "Alter"] <- "Age"
names(data.diffculty)[names(data.diffculty) == "Openess"] <- "Openness"
names(data.ratings)[names(data.ratings) == "Geschlecht"] <- "Gender"
names(data.ratings)[names(data.ratings) == "Alter"] <- "Age"
names(data.ratings)[names(data.ratings) == "Openess"] <- "Openness"
data.diffculty$Gender[data.diffculty$Gender == 3] <- NA
data.diffculty$Gender <- factor(data.diffculty$Gender,levels=c(1,2),labels=c("Male","Female"))
data.diffculty$IT <- factor(data.diffculty$IT,levels=c(1,2),labels=c("Yes","No"))
data.diffculty$emojiPos <- factor(data.diffculty$emojiPos)
data.diffculty$twoWordPos <- factor(data.diffculty$twoWordPos)
data.diffculty$threeClassPos <- factor(data.diffculty$threeClassPos)
data.ratings$Gender[data.ratings$Geschlecht == 3] <- NA
data.ratings$Gender <- factor(data.ratings$Gender,levels=c(1,2),labels=c("Male","Female"))
data.ratings$IT <- factor(data.ratings$IT,levels=c(1,2),labels=c("Yes","No"))
data.ratings$emojiPos <- factor(data.ratings$emojiPos)
data.ratings$twoWordPos <- factor(data.ratings$twoWordPos)
data.ratings$threeClassPos <- factor(data.ratings$threeClassPos)
model1_emoji <- gam(emojiDif ~ Age + Gender + IT + Extraversion + s(Agreeableness) +
Conscientiousness + Neuroticism + s(Openness) + emojiPos,
data = data.diffculty)
plot(model1_emoji, pages = 1, jit=TRUE)
summary(model1_emoji)
model1_twoWord <- gam(twoWordDif ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + twoWordPos,
data = data.diffculty)
summary(model1_twoWord)
plot(model1_twoWord, pages = 1, jit=TRUE, scale = 0)
model1_threeClass <- gam(threeClassDif ~ Age + Gender + IT + Extraversion + s(Agreeableness) +
Conscientiousness + Neuroticism + s(Openness) + threeClassPos,
data = data.diffculty)
summary(model1_threeClass)
plot(model1_threeClass, pages = 1, jit=TRUE, scale =0)
model2 <- gam(emojiDif ~ Age + Gender + IT + Extraversion + s(Agreeableness) +
Conscientiousness + Neuroticism + s(Openness) + emojiPos,
data = data.diffculty)
plot(model2, pages = 1, jit=TRUE)
summary(model2)
texreg(list(model1_emoji, model1_twoWord, model1_threeClass))
texreg(emojiDifficulty)
View(data.diffculty)
data.diffculty$IT <- factor(data.diffculty$IT,levels=c(1,2),labels=c("Yes","No"))
data.diffculty <- read.csv("data/data_creationDifficult_emoji12 (121 Datasets).CSV",
sep = ";", dec = ",")
data.ratings <- read.csv("data/data_creationRating_emoji12 (103 Datasets).CSV",
sep = ";", dec = ",")
names(data.diffculty)[names(data.diffculty) == "Geschlecht"] <- "Gender"
names(data.diffculty)[names(data.diffculty) == "Alter"] <- "Age"
names(data.diffculty)[names(data.diffculty) == "Openess"] <- "Openness"
names(data.ratings)[names(data.ratings) == "Geschlecht"] <- "Gender"
names(data.ratings)[names(data.ratings) == "Alter"] <- "Age"
names(data.ratings)[names(data.ratings) == "Openess"] <- "Openness"
data.diffculty$Gender[data.diffculty$Gender == 3] <- NA
data.diffculty$Gender <- factor(data.diffculty$Gender,levels=c(1,2),labels=c("Male","Female"))
data.diffculty$IT <- factor(data.diffculty$IT,levels=c(1,2),labels=c("Yes","No"))
data.diffculty$emojiPos <- factor(data.diffculty$emojiPos)
data.diffculty$twoWordPos <- factor(data.diffculty$twoWordPos)
data.diffculty$threeClassPos <- factor(data.diffculty$threeClassPos)
data.ratings$Gender[data.ratings$Geschlecht == 3] <- NA
data.ratings$Gender <- factor(data.ratings$Gender,levels=c(1,2),labels=c("Male","Female"))
data.ratings$IT <- factor(data.ratings$IT,levels=c(1,2),labels=c("Yes","No"))
data.ratings$emojiPos <- factor(data.ratings$emojiPos)
data.ratings$twoWordPos <- factor(data.ratings$twoWordPos)
data.ratings$threeClassPos <- factor(data.ratings$threeClassPos)
which(data.difficulty$emojDif)
which(data.diffculty$emojiDif)
which(colnames(data.diffculty))
which(colnames(data.diffculty) == "emojiPos")
which(colnames(data.diffculty) == "emojiDif")
which(colnames(data.diffculty) == "emojiDif" | colnames(data.diffculty) == "twoWordDif" | colnames(data.diffculty) == "threeClassDif")
data.difficulty$meanDiff <- rowMeans(data.difficulty[which(colnames(data.diffculty) == "emojiDif" | colnames(data.diffculty) == "twoWordDif" | colnames(data.diffculty) == "threeClassDif")], na.rm=TRUE)
data.diffculty$meanDiff <- rowMeans(data.difficulty[which(colnames(data.diffculty) == "emojiDif" | colnames(data.diffculty) == "twoWordDif" | colnames(data.diffculty) == "threeClassDif")], na.rm=TRUE)
data.diffculty$meanDiff <- rowMeans(data.diffculty[which(colnames(data.diffculty) == "emojiDif" | colnames(data.diffculty) == "twoWordDif" | colnames(data.diffculty) == "threeClassDif")], na.rm=TRUE)
View(data.diffculty)
meanDifficulty <- gam(meanDiff ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + emojiPos,
data = data.diffculty)
summary(meanDifficulty)
plot(meanDifficulty, pages = 1, jit=TRUE, scale = 0)
rm(data.diffculty)
data.difficulty <- read.csv("data/data_creationDifficult_emoji12 (121 Datasets).CSV",
sep = ";", dec = ",")
data.ratings <- read.csv("data/data_creationRating_emoji12 (103 Datasets).CSV",
sep = ";", dec = ",")
names(data.difficulty)[names(data.difficulty) == "Geschlecht"] <- "Gender"
names(data.difficulty)[names(data.difficulty) == "Alter"] <- "Age"
names(data.difficulty)[names(data.difficulty) == "Openess"] <- "Openness"
names(data.ratings)[names(data.ratings) == "Geschlecht"] <- "Gender"
names(data.ratings)[names(data.ratings) == "Alter"] <- "Age"
names(data.ratings)[names(data.ratings) == "Openess"] <- "Openness"
data.difficulty$Gender[data.difficulty$Gender == 3] <- NA
data.difficulty$Gender <- factor(data.difficulty$Gender,levels=c(1,2),labels=c("Male","Female"))
data.difficulty$IT <- factor(data.difficulty$IT,levels=c(1,2),labels=c("Yes","No"))
data.difficulty$emojiPos <- factor(data.difficulty$emojiPos)
data.difficulty$twoWordPos <- factor(data.difficulty$twoWordPos)
data.difficulty$threeClassPos <- factor(data.difficulty$threeClassPos)
data.difficulty$meanDiff <- rowMeans(data.difficulty[which(colnames(data.difficulty) == "emojiDif" | colnames(data.difficulty) == "twoWordDif" | colnames(data.difficulty) == "threeClassDif")], na.rm=TRUE)
data.ratings$Gender[data.ratings$Geschlecht == 3] <- NA
data.ratings$Gender <- factor(data.ratings$Gender,levels=c(1,2),labels=c("Male","Female"))
data.ratings$IT <- factor(data.ratings$IT,levels=c(1,2),labels=c("Yes","No"))
data.ratings$emojiPos <- factor(data.ratings$emojiPos)
data.ratings$twoWordPos <- factor(data.ratings$twoWordPos)
data.ratings$threeClassPos <- factor(data.ratings$threeClassPos)
meanDifficulty <- gam(meanDiff ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + emojiPos,
data = data.difficulty)
summary(meanDifficulty)
plot(meanDifficulty, pages = 1, jit=TRUE, scale = 0)
emojiDifficulty <- gam(emojiDif ~ s(Age) + Gender + IT + s(Extraversion) + s(Agreeableness) +
s(Conscientiousness) + s(Neuroticism) + s(Openness) + emojiPos,
data = data.difficulty)
summary(emojiDifficulty)
texreg(emojiDifficulty)
texreg(list(model1_emoji, model1_twoWord, model1_threeClass))
