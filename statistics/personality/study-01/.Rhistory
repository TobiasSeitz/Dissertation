}
plotCI(difficultyTable_long,"DifficultyScore","Policy")
plotCI <- function(longDF, dependentVariable, Policy) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=Policy);
(g <- ggplot(difficultySummary, aes(x=dependentVariable, y=Policy, fill=Policy)) +
geom_errorbarh(aes(x=dependentVariable, xmin=dependentVariable-ci, xmax=dependentVariable+ci, height=0)) +
geom_point(aes(colour=Policy), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous("\n Difficulty Scores and 95% CIs",limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none"))
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy")
plotCI(difficultyTable_long,difficultyTable_long$DifficultyScore,difficultyTable_long$Policy)
plotCI <- function(longDF, dependentVariable, Policy) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=Policy);
(g <- ggplot(difficultySummary, aes(x=dependentVariable, y=Policy, fill=Policy)) +
geom_errorbarh(aes(x=dependentVariable, xmin=dependentVariable-ci, xmax=dependentVariable+ci, height=0)) +
geom_point(aes(colour=Policy), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous("\n Difficulty Scores and 95% CIs",limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none"))
g
}
plotCI(difficultyTable_long,difficultyTable_long$DifficultyScore,difficultyTable_long$Policy)
plotCI(difficultyTable_long,difficultyTable_long$DifficultyScore,difficultyTable_long$Policy)
View(summarySE)
View(summarySE)
difficultyTable_long$"DifficultyScore"
plotCI <- function(longDF, dependentVariable, Policy) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=Policy);
(g <- ggplot(difficultySummary, aes(x=dependentVariable, y=Policy, fill=Policy)) +
geom_errorbarh(aes(x=longDF$dependentVariable, xmin=longDF$dependentVariable-ci, xmax=longDF$dependentVariable+ci, height=0)) +
geom_point(aes(colour=Policy), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous("\n Difficulty Scores and 95% CIs",limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none"))
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy")
plotCI <- function(longDF, dependentVariable, Policy) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=Policy);
g <- ggplot(difficultySummary, aes(x=longDF$dependentVariable, y=longDF$Policy, fill=longDF$Policy)) +
geom_point(aes(colour=Policy), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous("\n Difficulty Scores and 95% CIs",limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy")
plotCI <- function(longDF, dependentVariable, Policy) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=Policy);
g <- ggplot(difficultySummary, aes(x=longDF$dependentVariable, y=longDF$Policy, fill=longDF$Policy)) +
geom_point(aes(colour=longDF$Policy), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous("\n Difficulty Scores and 95% CIs",limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy")
debugSource('~/Dissertation/statistics/personality/study-01/analysis.R', encoding = 'UTF-8', echo=TRUE)
longDF$dependentVariable
dependentVariable
longDF[[dependentVariable]]
colnames(longDF)
colnames(longDF[[dependentVariable]])
colnames(which(longDF[[dependentVariable]]==dependentVariable))
plotCI <- function(longDF, dependentVariable, group,xAxisTitle) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
g <- ggplot(difficultySummary, aes(x=longDF[[dependentVariable]], y=longDF[[group]], fill=longDF[[group]])) +
geom_point(aes(colour=longDF[[group]]), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous(xAxisTitle,limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy","Difficulty Scores and 95% CIs")
plotCI <- function(longDF, dependentVariable, group,xAxisTitle) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
g <- ggplot(longDF, aes(x=longDF[[dependentVariable]], y=longDF[[group]], fill=longDF[[group]])) +
geom_point(aes(colour=longDF[[group]]), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous(xAxisTitle,limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
g
}
plotCI <- function(longDF, dependentVariable, group,xAxisTitle) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous(xAxisTitle,limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy","Difficulty Scores and 95% CIs")
plotCI <- function(longDF, dependentVariable, group, xAxisTitle,filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
#scale_y_discrete(labels=ivs_labels) +
scale_x_continuous(xAxisTitle,limits=c(5,15),breaks=seq(5, 15, 0.5)) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy","Difficulty Scores and 95% CIs")
max(difficultyTable_long$DifficultyScore)
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, minValue=NULL,maxValue= filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
maxVal <- max(longDF[[dependentVariable]])
minVal <- min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
if (!is.null(xAxisTitle)){
g <- scale_x_continuous(xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, 0.5))
}
#scale_y_discrete(labels=ivs_labels) +
g
}
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, minValue=NULL,maxValue= filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
maxVal <- max(longDF[[dependentVariable]])
minVal <- min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none")
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, 0.5))
}
#scale_y_discrete(labels=ivs_labels) +
g
}
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, minValue=NULL,maxValue= filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
maxVal <- max(longDF[[dependentVariable]])
minVal <- min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, 0.5))
}
g
}
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, minValue=NULL,maxValue= filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
maxVal <- max(longDF[[dependentVariable]])
minVal <- min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, 0.5))
}
g
}
debugSource('~/Dissertation/statistics/personality/study-01/analysis.R', encoding = 'UTF-8', echo=TRUE)
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, minValue=NULL,maxValue=NULL, filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
maxVal <- max(longDF[[dependentVariable]])
minVal <- min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, 0.5))
}
g
}
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, minValue=NULL,maxValue=NULL, filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
maxVal <- max(longDF[[dependentVariable]])
minVal <- min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
limits <- c(minVal, maxVal);
limits[0]
g <- g + scale_x_continuous(xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, 0.5))
}
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy","Difficulty Scores and 95% CIs")
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, minValue=NULL,maxValue=NULL, filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
maxVal <- max(longDF[[dependentVariable]])
minVal <- min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
limits <- c(minVal, maxVal);
limits[0]
g <- g + scale_x_continuous(xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, 1))
}
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy","Difficulty Scores and 95% CIs")
debugSource('~/Dissertation/statistics/personality/study-01/analysis.R', encoding = 'UTF-8', echo=TRUE)
limits
limits[0]
limits[[0]]
limits[][0]
plotCI <- function(longDF, dependentVariable, group, xAxisTitle=NULL, yLabels=NULL, minValue=NULL,maxValue=NULL, step=1, filename=NULL) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=group);
if(is.null(maxValue)) maxValue = max(longDF[[dependentVariable]])
if(is.null(minValue)) minValue = min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[group]], fill=difficultySummary[[group]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[group]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(name=xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, step))
}
if(!is.null(yLabels)){
g <- g + scale_y_discrete(labels=yLabels)
}
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs",yLabels=c("a","b","c"))
plotCI <- function(longDF, dependentVariable, groupVariable, xAxisTitle=NULL, yLabels=NULL, minValue=NULL,maxValue=NULL, step=1) {
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=groupVariable);
if(is.null(maxValue)) maxValue = max(longDF[[dependentVariable]])
if(is.null(minValue)) minValue = min(longDF[[dependentVariable]])
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[groupVariable]], fill=difficultySummary[[groupVariable]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[groupVariable]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(name=xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, step))
}
if(!is.null(yLabels)){
g <- g + scale_y_discrete(labels=yLabels)
}
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
plotCI <- function(longDF, dependentVariable, groupVariable, xAxisTitle=NULL, yLabels=NULL, minValue=NULL,maxValue=NULL, step=1) {
## dependecy: summarySE function
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=groupVariable);
## by default we want to avoid the "lie-factor" and take the min/max values from the dataset to communicate the relation of CIs
if(is.null(maxValue)) maxValue = max(longDF[[dependentVariable]])
if(is.null(minValue)) minValue = min(longDF[[dependentVariable]])
##
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[groupVariable]], fill=difficultySummary[[groupVariable]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[groupVariable]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank())
#theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(name=xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, step))
}
if(!is.null(yLabels)){
g <- g + scale_y_discrete(labels=yLabels)
}
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
plotCI <- function(longDF, dependentVariable, groupVariable, xAxisTitle=NULL, yLabels=NULL, minValue=NULL,maxValue=NULL, step=1) {
## dependecy: summarySE function
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=groupVariable);
## by default we want to avoid the "lie-factor" and take the min/max values from the dataset to communicate the relation of CIs
if(is.null(maxValue)) maxValue = max(longDF[[dependentVariable]])
if(is.null(minValue)) minValue = min(longDF[[dependentVariable]])
##
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[groupVariable]], fill=difficultySummary[[groupVariable]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[groupVariable]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(name=xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, step))
}
if(!is.null(yLabels)){
g <- g + scale_y_discrete(labels=yLabels)
}
g
}
plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
pDifficultyCI <- plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
file.path("graphs","user-rating-ci.pdf")
library(extrafont)
libary(ggplot2)
library(plyr)
library(extrafont)
library(ggplot2)
View(summarySE)
savePlot <- function(plot,filename,width,height,path=NULL){
if(!is.null(path)) dir.create(path, showWarnings = FALSE)
else path <- getwd()
ggsave(plot=plot, filename=filename, path=path, width=width, height=height)
embed_fonts(file.path(path,filename), outfile=file.path(path,filename))
}
pDifficultyCI <- plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
pDifficultyCI
pDifficultyCI <- plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
plotCI <- function(longDF, dependentVariable, groupVariable, xAxisTitle=NULL, yLabels=NULL, minValue=NULL,maxValue=NULL, step=1) {
## dependecy: summarySE function
difficultySummary <- summarySE(longDF, measurevar=dependentVariable, groupvars=groupVariable);
## by default we want to avoid the "lie-factor" and take the min/max values from the dataset to communicate the relation of CIs
if(is.null(maxValue)) maxValue = max(longDF[[dependentVariable]])
if(is.null(minValue)) minValue = min(longDF[[dependentVariable]])
##
g <- ggplot(difficultySummary, aes(x=difficultySummary[[dependentVariable]], y=difficultySummary[[groupVariable]], fill=difficultySummary[[groupVariable]])) +
geom_errorbarh(aes(x=difficultySummary[[dependentVariable]], xmin=difficultySummary[[dependentVariable]]-ci, xmax=difficultySummary[[dependentVariable]]+ci, height=0)) +
geom_point(aes(colour=difficultySummary[[groupVariable]]), size=5) +
theme(panel.background = element_rect(fill = 'grey98', linetype = "solid"), legend.position="bottom") +
theme(panel.grid.major = element_line(colour = "grey87"), panel.grid.major.y = element_line(colour = "grey95")) +
theme(panel.grid.minor = element_blank()) +
theme(text = element_text(size=18)) +
theme(axis.text.y = element_text(colour = "black", size = 16)) +
theme(axis.text.x = element_text(colour = "grey60", size = 13)) +
theme(axis.ticks.x = element_line(colour = "grey87"), axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none");
if (!is.null(xAxisTitle)){
g <- g + scale_x_continuous(name=xAxisTitle,limits=c(minVal,maxVal),breaks=seq(minVal, maxVal, step))
}
if(!is.null(yLabels)){
g <- g + scale_y_discrete(labels=yLabels)
}
g
}
pDifficultyCI <- plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
pDifficultyCI
savePlot(pDifficultyCI,"difficulty-ci",width, height)
savePlot <- function(plot,filename,width,height,path=NULL){
if(!is.null(path)) dir.create(path, showWarnings = FALSE)
else path <- getwd()
ggsave(plot=plot, filename=filename, path=path, width=width, height=height)
embed_fonts(file.path(path,filename), outfile=file.path(path,filename))
}
savePlot(pDifficultyCI,"difficulty-ci",width, height)
getwd
getwd()
savePlot <- function(plot,filename,width,height,path=NULL){
if(!is.null(path)) dir.create(path, showWarnings = FALSE)
else path <- getwd()
ggsave(plot=plot, filename=filename, path=path, width=width, height=height)
embed_fonts(file.path(path,filename), outfile=file.path(path,filename))
}
savePlot(pDifficultyCI,"difficulty-ci",width, height)
pDifficultyCI <- plotCI(difficultyTable_long,"DifficultyScore","Policy",xAxisTitle="Difficulty Scores and 95% CIs")
