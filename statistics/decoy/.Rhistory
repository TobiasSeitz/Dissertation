ggplot(data=counts, aes(x=count,y=behavior,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
coord_flip()
ggplot(data=counts, aes(x=count,y=dummycol,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
coord_flip()
counts <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(counts) <- list("dummycol","behavior","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on-par",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
ggplot(data=counts, aes(x=count,y=dummycol,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
coord_flip()
ggplot(data=counts, aes(x=behavior,y=dummycol,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
coord_flip()
ggplot(data=counts, aes(x=count,y=dummycol,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
coord_flip()
View(counts)
ggplot(data=counts, aes(x=dummycol,y=count,fill=reorder(behavior,count))) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip()
counts <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(counts) <- list("dummycol","behavior","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective (own password, sub-par score)",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on-par (own password, on-par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
ggplot(data=counts, aes(x=dummycol,y=count,fill=reorder(behavior,count))) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", col = "Resulting Behavior") +
theme(axis.text.y = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(axis.title.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=reorder(behavior,count))) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", color = "Resulting Behavior") +
theme(axis.text.y = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(axis.title.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=reorder(behavior,count))) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", color = "Resulting Behavior") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", color = "Resulting Behavior") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=reorder(behavior))) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", color = "Resulting Behavior") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", col = "Resulting Behavior") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", col = "Resulting Behavior") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", col = "Behavior") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution", y = "Behavior") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(x = "Distribution") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Distribution") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact.pdf")
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact.pdf",path="graphs")
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact.pdf",path="graphs", height=1)
counts <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(counts) <- list("dummycol","behavior","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective (own password, weak score)",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on-par (own password, on-par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact.pdf",path="graphs", height=1)
(ciLengthOwn <- plotCI(d.own.all, dependentVariable = "length", groupVariable = "group_id", xAxisTitle = "Password Length", minValue = 8, maxValue = 16, step=1))
source('../plotCI.R')
d = read.csv("./data/paper-graphs-data.csv",header=T,sep=";"); # final set of 83 participants
conditions <- c("Control","Passphrase", "Mangled", "Decoy");
d$group_id <- factor(d$group_sub, levels = c("A","BT","BD","C"), labels = conditions);
d99$group_id <- factor(d99$group_id,levels = c(1,2,3,4), labels = conditions)
treatmentGroups <- c("Passphrase", "Mangled", "Decoy")
zxcvbnMetrics <- c("password_length","digit","upper","lower")
d.own.all <- d[d$used_own_password == "YES",]
(ciLengthOwn <- plotCI(d.own.all, dependentVariable = "length", groupVariable = "group_id", xAxisTitle = "Password Length", minValue = 8, maxValue = 16, step=1))
View(d.own.all)
(ciLengthOwn <- plotCI(d.own.all, dependentVariable = "password_length", groupVariable = "group_id", xAxisTitle = "Password Length", minValue = 8, maxValue = 16, step=1))
savePlot(ciLengthOwn, "graphs/ci-length-own.pdf", width=5, height=3)
(ciLengthOwn <- plotCI(d.own.all, dependentVariable = "password_length", groupVariable = "group_id", xAxisTitle = "Password Length", minValue = 8, maxValue = 16, step=1))
(ciLengthOwn <- plotCI(d.own.all, dependentVariable = "password_length", groupVariable = "group_id", xAxisTitle = "Password Length", minValue = 8, maxValue = 16, step=1))
savePlot(ciLengthOwn, "graphs/ci-length-own.pdf", width=10, height=3)
gam(password_length_corrected ~ group_id, data = d.own.all)
gam(pw_length_corrected ~ group_id, data = d.own.all)
summary(gam(pw_length_corrected ~ group_id, data = d.own.all))
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
plotPercentageDataFrame <- function(df.p, labs.x = "Guess Number", labs.y = "Percentage Guessed", ...){
# plot!
ggplot(data=df.p, aes(x = guessNumber, y = percentCracked, colour=condition, group = condition)) +
geom_line() +
scale_y_continuous(labels = function(x){ paste0(x, "%")}) +
scale_x_continuous(labels = math_format(10^.x)) +
theme(legend.position = "top") +
labs(x=labs.x,y=labs.y, color="Condition")
}
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
source('~/Dissertation/statistics/guess-number-plot.R')
d = read.csv("./data/paper-graphs-data.csv",header=T,sep=";"); # final set of 83 participants
conditions <- c("Control","Passphrase", "Mangled", "Decoy");
d$group_id <- factor(d$group_sub, levels = c("A","BT","BD","C"), labels = conditions)
treatmentGroups <- c("Passphrase", "Mangled", "Decoy")
d.own.all <- d[d$used_own_password == "YES",]
d.own.treatment <- d[d$used_own_password == "YES" & d$group_id %in% treatmentGroups,]
d.treatment <- d[d$group_id %in% treatmentGroups,]
counts <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(counts) <- list("dummycol","behavior","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective (own password, weak score)",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on-par (own password, on-par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank())
library(ggplot2)
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
library(scales)
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_area(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
colnames(counts) <- list("dummycol","Persuasion Outcome","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective (own password, weak score)",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on-par (own password, on-par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
d = read.csv("./data/paper-graphs-data.csv",header=T,sep=";"); # final set of 83 participants
conditions <- c("Control","Passphrase", "Mangled", "Decoy");
d$group_id <- factor(d$group_sub, levels = c("A","BT","BD","C"), labels = conditions)
treatmentGroups <- c("Passphrase", "Mangled", "Decoy")
d.own.all <- d[d$used_own_password == "YES",]
d.own.treatment <- d[d$used_own_password == "YES" & d$group_id %in% treatmentGroups,]
d.treatment <- d[d$group_id %in% treatmentGroups,]
counts <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(counts) <- list("dummycol","Persuasion Outcome","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective (own password, weak score)",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on-par (own password, on-par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
View(counts)
d = read.csv("./data/paper-graphs-data.csv",header=T,sep=";"); # final set of 83 participants
conditions <- c("Control","Passphrase", "Mangled", "Decoy");
d$group_id <- factor(d$group_sub, levels = c("A","BT","BD","C"), labels = conditions)
treatmentGroups <- c("Passphrase", "Mangled", "Decoy")
d.own.all <- d[d$used_own_password == "YES",]
d.own.treatment <- d[d$used_own_password == "YES" & d$group_id %in% treatmentGroups,]
d.treatment <- d[d$group_id %in% treatmentGroups,]
counts <- data.frame(matrix(ncol = 3, nrow = 0))
View(counts)
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T,title = "Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
# nudge efficacy.
library(ggplot2)
library(scales)
d = read.csv("./data/paper-graphs-data.csv",header=T,sep=";"); # final set of 83 participants
conditions <- c("Control","Passphrase", "Mangled", "Decoy");
d$group_id <- factor(d$group_sub, levels = c("A","BT","BD","C"), labels = conditions)
treatmentGroups <- c("Passphrase", "Mangled", "Decoy")
d.own.all <- d[d$used_own_password == "YES",]
d.own.treatment <- d[d$used_own_password == "YES" & d$group_id %in% treatmentGroups,]
d.treatment <- d[d$group_id %in% treatmentGroups,]
counts <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(counts) <- list("dummycol","behavior","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective (own password, weak score)",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on-par (own password, on-par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T,title = "Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact.pdf",path="graphs", height=1)
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
#guides(colour = guide_legend(reverse=T,title = "Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(colour = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(fill = guide_legend(reverse=T)) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(fill = guide_legend(reverse=T, title="Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(fill = guide_legend(reverse=T, title="Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(text = element_text(family="Roboto"))
)
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact-v2.pdf",path="graphs", height=5)
library(fonts)
library(extrafont)
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(fill = guide_legend(reverse=T, title="Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(text = element_text(family="Roboto"))
)
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact-v2.pdf",path="graphs", height=5)
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact-v2.pdf",path="graphs", height=3)
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on par (own password, on-par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on par (own password, on par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(fill = guide_legend(reverse=T, title="Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(text = element_text(family="Roboto"))
)
d = read.csv("./data/paper-graphs-data.csv",header=T,sep=";"); # final set of 83 participants
conditions <- c("Control","Passphrase", "Mangled", "Decoy");
d$group_id <- factor(d$group_sub, levels = c("A","BT","BD","C"), labels = conditions)
treatmentGroups <- c("Passphrase", "Mangled", "Decoy")
d.own.all <- d[d$used_own_password == "YES",]
d.own.treatment <- d[d$used_own_password == "YES" & d$group_id %in% treatmentGroups,]
d.treatment <- d[d$group_id %in% treatmentGroups,]
counts <- data.frame(matrix(ncol = 3, nrow = 0))
colnames(counts) <- list("dummycol","behavior","count")
counts <- rbind(counts, data.frame(dummycol="y",
behavior="ineffective (own password, weak score)",
count=length(d.treatment$score[d.treatment$score < 3  & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="on par (own password, on par score)",
count=length(d.treatment$score[d.treatment$score > 2 & d.treatment$used_own_password == "YES"])))
counts <- rbind(counts, data.frame(dummycol="y",
behavior="effective (suggestion accepted)",
count=length(d.treatment$score[d.treatment$used_own_password == "NO"])))
(proportionTreatmentEffectivenessPlot <- ggplot(data=counts, aes(x=dummycol,y=count,fill=behavior)) +
geom_bar(stat="identity",position = "fill") +
scale_y_continuous(labels = percent_format()) +
coord_flip() +
labs(y = "Proportion of Treatment Groups") +
guides(fill = guide_legend(reverse=T, title="Nudge Efficacy")) +
theme(legend.position="bottom") +
theme(axis.text.y = element_blank(),axis.title.y = element_blank()) +
theme(axis.ticks.y = element_blank()) +
theme(text = element_text(family="Roboto"))
)
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact-v2.pdf",path="graphs", height=3)
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact-v2.pdf",path="graphs", height=3, width=5)
savePlot(proportionTreatmentEffectivenessPlot, "treatment-impact-v2.pdf",path="graphs", height=2.5)
(ciLengthOwn <- plotCI(d.own.all, dependentVariable = "password_length", groupVariable = "group_id", xAxisTitle = "Password Length", minValue = 8, maxValue = 16, step=1))
library(outliers)
library(pairwiseCI)
source('../util.R')
source('../plotCI.R')
source('../plotGAM.R')
source('../guess-number-plot.R')
d = read.csv("./data/paper-graphs-data.csv",header=T,sep=";"); # final set of 83 participants
d99 <- read.csv("./decoydata.csv",header=T,sep=";")
conditions <- c("Control","Passphrase", "Mangled", "Decoy");
d$group_id <- factor(d$group_sub, levels = c("A","BT","BD","C"), labels = conditions);
d99$group_id <- factor(d99$group_id,levels = c(1,2,3,4), labels = conditions)
treatmentGroups <- c("Passphrase", "Mangled", "Decoy")
zxcvbnMetrics <- c("password_length","digit","upper","lower")
for(x in zxcvbnMetrics){
d[[x]] <- rm.outlier(d[[x]], fill=TRUE)
d99[[x]] <- rm.outlier(d99[[x]], fill=TRUE)
}
d.own.all <- d[d$used_own_password == "YES",]
d99.own.all <- d99[d99$used_own_password == 1,]
d.own.treatment <- d[d$used_own_password == "YES" & d$group_id %in% treatmentGroups,]
d99.own.treatment <- d99[d99$used_own_password == 1 & d99$group_id %in% treatmentGroups,]
lapply(zxcvbnMetrics, function(x){
d[[x]] <- rm.outlier(d[[x]])
})
(ciLengthOwn <- plotCI(d.own.all, dependentVariable = "password_length", groupVariable = "group_id", xAxisTitle = "Password Length", minValue = 8, maxValue = 16, step=1))
View(d.own.all)
